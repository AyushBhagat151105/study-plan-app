const weekData = [
  {
    week: 1,
    goal: "Introduction to HTML & CSS 🌐",
    topics: [
      "🔍 HTML Basics 📄",
      "🎨 CSS Fundamentals 🎨",
      "🏗️ Web Structure 🏗️",
      "💻 Introduction to CSS Preprocessors (Sass, Less)",
      "📈 Understanding CSS Units and Measurements",
    ],
    project: "Build a Personal Webpage 🏡",
    resources: [
      "📖 [MDN Web Docs on HTML](https://developer.mozilla.org/en-US/docs/Web/HTML)",
      "📖 [MDN Web Docs on CSS](https://developer.mozilla.org/en-US/docs/Web/CSS)",
      "📹 [FreeCodeCamp HTML & CSS Course](https://www.freecodecamp.org/learn/responsive-web-design/#basic-html-and-html5)",
    ],
    importantTopics: [
      "HTML Elements and Attributes",
      "CSS Selectors and Box Model",
      "CSS Positioning and Layout",
      "HTML Semantic Elements",
      "CSS Preprocessors and Their Benefits",
    ],
  },
  {
    week: 2,
    goal: "JavaScript Basics 📜",
    topics: [
      "🛠️ Understanding Variables and Data Types",
      "🔄 Control Structures: If, Switch, Loops",
      "📊 Functions: Declaration, Expressions, and Arrow Functions",
      "🔍 Introduction to JavaScript Object-Oriented Programming",
      "💻 Understanding JavaScript Closures",
    ],
    project: "Create a Simple Calculator 🧮",
    resources: [
      "📖 [JavaScript Info](https://javascript.info)",
      "📖 [MDN Web Docs on JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript)",
      "📹 [FreeCodeCamp JavaScript Course](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/)",
    ],
    importantTopics: [
      "Variable Scope and Hoisting",
      "Event Handling and Listeners",
      "JavaScript Object-Oriented Programming Concepts",
      "Closures and Their Use Cases",
      "JavaScript Best Practices and Code Organization",
    ],
  },
  {
    week: 3,
    goal: "Responsive Design 📱",
    topics: [
      "📐 Media Queries: Making Your Site Mobile-Friendly",
      "🧩 Flexbox and Grid Layouts",
      "🖥️ Introduction to CSS Frameworks (Bootstrap, Tailwind)",
      "💻 Understanding Mobile-First Design",
      "📈 Introduction to Accessibility in Web Development",
    ],
    project: "Revamp Your Personal Webpage for Responsiveness 📱",
    resources: [
      "📖 [CSS Tricks: A Complete Guide to Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)",
      "📖 [CSS Tricks: A Complete Guide to Grid](https://css-tricks.com/snippets/css/complete-guide-grid/)",
      "📹 [Bootstrap Documentation](https://getbootstrap.com/docs/5.0/getting-started/introduction/)",
    ],
    importantTopics: [
      "Mobile-First Design Principles",
      "Flexbox and Grid Principles",
      "CSS Frameworks and Their Benefits",
      "Accessibility Guidelines and Best Practices",
      "Responsive Design Patterns and Strategies",
    ],
  },
  {
    week: 4,
    goal: "Version Control with Git & GitHub 🛠️",
    topics: [
      "🌐 Understanding Git Basics",
      "📦 Creating and Managing Repositories on GitHub",
      "🔀 Branching and Merging",
      "💻 Introduction to Git Hooks",
      "📈 Understanding Git Submodules",
    ],
    project: "Collaborate on a Group Project Using GitHub 🤝",
    resources: [
      "📖 [Pro Git Book](https://git-scm.com/book/en/v2)",
      "📖 [GitHub Learning Lab](https://lab.github.com/)",
      "📹 [Git & GitHub Crash Course](https://www.youtube.com/watch?v=RGOj5yH7evk)",
    ],
    importantTopics: [
      "Commit Messages Best Practices",
      "Collaboration Workflows",
      "Git Hooks and Their Use Cases",
      "Git Submodules and Their Benefits",
      "Git Branching Strategies",
    ],
  },
  {
    week: 5,
    goal: "Introduction to React 🌟",
    topics: [
      "💡 What is React? Component-Based Architecture",
      "🛠️ Setting Up a React Project",
      "🔗 State and Props ",
      "🔁 Event Handling in React",
      "💻 Introduction to React Hooks",
    ],
    project: "Build a Simple Todo List App with React 📝",
    resources: [
      "📖 [React Official Documentation](https://reactjs.org/docs/getting-started.html)",
      "📖 [FreeCodeCamp React Course](https://www.freecodecamp.org/learn/front-end-development-libraries/react/)",
      "📹 [React Crash Course](https://www.youtube.com/watch?v=Ke90Tje7VS0)",
    ],
    importantTopics: [
      "React Component Life Cycle",
      "State and Props Management",
      "Event Handling and Binding",
      "React Hooks and Their Use Cases",
      "React Best Practices and Code Organization",
    ],
  },
  {
    week: 6,
    goal: "React Components and Styling 💄",
    topics: [
      "🎨 CSS-in-JS: Styled Components and Emotion",
      "🔩 Functional and Class Components",
      "🔍 React Fragment and Context API",
      "💻 Introduction to React Router",
      "📈 Understanding React DevTools",
    ],
    project: "Enhance Your Todo List App with React Router and Styled Components 🚀",
    resources: [
      "📖 [Styled Components Documentation](https://styled-components.com/docs)",
      "📖 [React Router Documentation](https://reactrouter.com/docs/en/v6)",
      "📹 [React DevTools Tutorial](https://www.youtube.com/watch?v=xu9WQlqZ5QI)",
    ],
    importantTopics: [
      "React Component Architecture",
      "CSS-in-JS and Its Benefits",
      "React Fragment and Context API",
      "React Router and Client-Side Routing",
      "React DevTools and Debugging",
    ],
  },
  {
    week: 7,
    goal: "React State Management and APIs 📊",
    topics: [
      "🔓 Understanding React State and Props",
      "🔝 Redux and React Redux",
      "🔗 React Context API and Hooks",
      "💻 Introduction to React Query",
      "📈 Understanding API Design and Best Practices",
    ],
    project: "Implement Redux and React Query in Your Todo List App 📈",
    resources: [
      "📖 [Redux Official Documentation](https://redux.js.org/docs/introduction/)",
      "📖 [React Query Documentation](https://react-query.tanstack.com/docs/overview)",
      "📹 [API Design Tutorial](https://www.youtube.com/watch?v=pTHSXEaKMmY)",
    ],
    importantTopics: [
      "React State Management Strategies",
      "Redux and React Redux",
      "React Context API and Hooks",
      "React Query and Data Fetching",
      "API Design Principles and Best Practices",
    ],
  },
  {
    week: 8,
    goal: "React Advanced Topics and Best Practices 💻",
    topics: [
      "🔍 React Memoization and Optimization",
      "🔝 React Error Boundaries and Error Handling",
      "🔗 React Portals and Refs",
      "💻 Introduction to React Testing Library",
      "📈 Understanding React Best Practices and Code Organization",
    ],
    project: "Optimize and Refactor Your Todo List App for Production 🚀",
    resources: [
      "📖 [React Official Documentation on Optimization](https://reactjs.org/docs/optimizing-performance.html)",
      "📖 [React Testing Library Documentation](https://testing-library.com/docs/react-testing-library/intro)",
      "📹 [React Best Practices Tutorial](https://www.youtube.com/watch?v=7Qm9Z7g9FkQ)",
    ],
    importantTopics: [
      "React Memoization and Optimization Techniques",
      "React Error Boundaries and Error Handling Strategies",
      "React Portals and Refs",
      "React Testing Library and Jest",
      "React Best Practices and Code Organization",
    ],
  },
  {
    week: 9,
    goal: "Introduction to Node.js and Express.js 🌐",
    topics: [
      "💻 Introduction to Node.js and JavaScript Runtime",
      "🔩 Understanding Express.js Framework",
      "🔗 Creating RESTful APIs with Express.js",
      "💻 Introduction to Node.js Modules and npm",
      "📈 Understanding Node.js Event-Driven and Non-Blocking I/O",
    ],
    project: "Build a Simple RESTful API with Node.js and Express.js 📊",
    resources: [
      "📖 [Node.js Official Documentation](https://nodejs.org/en/docs/)",
      "📖 [Express.js Official Documentation](https://expressjs.com/en/starter/installing.html)",
      "📹 [Node.js and Express.js Crash Course](https://www.youtube.com/watch?v=fBNz5xF-Kx4)",
    ],
    importantTopics: [
      "Node.js and JavaScript Runtime",
      "Express.js Framework and Its Features",
      "Creating RESTful APIs with Express.js",
      "Node.js Modules and npm",
      "Node.js Event-Driven and Non-Blocking I/O",
    ],
  },
  {
    week: 10,
    goal: "Node.js and Express.js Advanced Topics 💻",
    topics: [
      "🔓 Understanding Node.js Streams and Buffers",
      "🔝 Node.js File System and File Operations",
      "🔗 Introduction to Node.js Authentication and Authorization",
      "💻 Understanding Node.js Error Handling and Debugging",
      "📈 Introduction to Node.js Security Best Practices",
    ],
    project: "Enhance Your RESTful API with Node.js Streams and Authentication 🚀",
    resources: [
      "📖 [Node.js Official Documentation on Streams](https://nodejs.org/en/docs/guides/stream-module/)",
      "📖 [Node.js Official Documentation on File System](https://nodejs.org/en/docs/guides/file-system/)",
      "📹 [Node.js Authentication and Authorization Tutorial](https://www.youtube.com/watch?v=7nafaH9SddU)",
    ],
    importantTopics: [
      "Node.js Streams and Buffers",
      "Node.js File System and File Operations",
      "Node.js Authentication and Authorization",
      "Node.js Error Handling and Debugging",
      "Node.js Security Best Practices",
    ],
  },
  {
    week: 11,
    goal: "Introduction to MongoDB and Mongoose 📊",
    topics: [
      "💻 Introduction to MongoDB and NoSQL Databases",
      "🔩 Understanding MongoDB Data Modeling and Schema Design",
      "🔗 Introduction to Mongoose and MongoDB ORM",
      "💻 Understanding MongoDB CRUD Operations",
      "📈 Introduction to MongoDB Data Validation and Security",
    ],
    project: "Build a Simple CRUD App with MongoDB and Mongoose 📈",
    resources: [
      "📖 [MongoDB Official Documentation](https://docs.mongodb.com/)",
      "📖 [Mongoose Official Documentation](https://mongoosejs.com/docs/)",
      "📹 [MongoDB and Mongoose Crash Course](https://www.youtube.com/watch?v=pWbMrx5rVBE)",
    ],
    importantTopics: [
      "MongoDB and NoSQL Databases",
      "MongoDB Data Modeling and Schema Design",
      "Mongoose and MongoDB ORM",
      "MongoDB CRUD Operations",
      "MongoDB Data Validation and Security",
    ],
  },
  {
    week: 12,
    goal: "MongoDB and Mongoose Advanced Topics 💻",
    topics: [
      "🔓 Understanding MongoDB Indexing and Query Optimization",
      "🔝 MongoDB Aggregation Framework and Data Processing",
      "🔗 Introduction to MongoDB Atlas and Cloud Services",
      "💻 Understanding MongoDB Transactions and ACID Compliance",
      "📈 Introduction to MongoDB Security and Authentication",
    ],
    project: "Enhance Your CRUD App with MongoDB Indexing and Aggregation 🚀",
    resources: [
      "📖 [MongoDB Official Documentation on Indexing](https://docs.mongodb.com/manual/indexes/)",
      "📖 [MongoDB Official Documentation on Aggregation](https://docs.mongodb.com/manual/aggregation/)",
      "📹 [MongoDB Atlas and Cloud Services Tutorial](https://www.youtube.com/watch?v=lPCSn9kjQwQ)",
    ],
    importantTopics: [
      "MongoDB Indexing and Query Optimization",
      "MongoDB Aggregation Framework and Data Processing",
      "MongoDB Atlas and Cloud Services",
      "MongoDB Transactions and ACID Compliance",
      "MongoDB Security and Authentication",
    ],
  },
  {
    week: 13,
    goal: "Full-Stack Development with React, Node.js, and MongoDB 🌐",
    topics: [
      "💻 Introduction to Full-Stack Development",
      "🔩 Understanding Frontend and Backend Architecture",
      "🔗 Building a Full-Stack App with React, Node.js, and MongoDB",
      "💻 Understanding API Design and Integration",
      "📈 Introduction to Full-Stack Development Best Practices",
    ],
    project: "Build a Full-Stack App with React, Node.js, and MongoDB 🚀",
    resources: [
      "📖 [Full-Stack Development Tutorial](https://www.freecodecamp.org/learn/full-stack-development-with-react/)",
      "📖 [API Design Guide](https://apiguide.readthedocs.io/en/latest/)",
      "📹 [Full-Stack Development Crash Course ](https://www.youtube.com/watch?v=mrHNSanmqQc)",
    ],
    importantTopics: [
      "Full-Stack Development Concepts",
      "Frontend and Backend Architecture",
      "Building a Full-Stack App with React, Node.js, and MongoDB",
      "API Design and Integration",
      "Full-Stack Development Best Practices",
    ],
  },
  {
    week: 14,
    goal: "Deployment and Security Best Practices 🚀",
    topics: [
      "💻 Introduction to Deployment Strategies",
      "🔩 Understanding Cloud Platforms and Services",
      "🔗 Deploying a Full-Stack App to Cloud Platforms",
      "💻 Understanding Security Best Practices and Threats",
      "📈 Introduction to DevOps and Continuous Integration",
    ],
    project: "Deploy Your Full-Stack App to Cloud Platforms and Implement Security Best Practices 🚀",
    resources: [
      "📖 [Deployment Strategies Guide](https://www.freecodecamp.org/learn/deployment-strategies/)",
      "📖 [Cloud Platforms and Services Guide](https://www.freecodecamp.org/learn/cloud-platforms-and-services/)",
      "📹 [DevOps and Continuous Integration Tutorial](https://www.youtube.com/watch?v=0yWAtQ6wYNM)",
    ],
    importantTopics: [
      "Deployment Strategies",
      "Cloud Platforms and Services",
      "Deploying a Full-Stack App to Cloud Platforms",
      "Security Best Practices and Threats",
      "DevOps and Continuous Integration",
    ],
  },
];

export default weekData;